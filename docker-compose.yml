services:
  avalon_api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - PORT=3001
      - BROKER_ID=${BROKER_ID_AVALON}
      - BASE_URL_WS=${BASE_URL_WS_AVALON}
      - BASE_URL_API=${BASE_URL_API_AVALON}
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@avalon_mongo:27018/?authSource=admin
    ports:
      - "3001:3001"
    depends_on:
      - avalon_mongo
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - default
      - trading_net

  polarium_api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - PORT=3002
      - BROKER_ID=${BROKER_ID_POLARIUM}
      - BASE_URL_WS=${BASE_URL_WS_POLARIUM}
      - BASE_URL_API=${BASE_URL_API_POLARIUM}
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@polarium_mongo:27017/?authSource=admin
    ports:
      - "3002:3002"
    depends_on:
      - polarium_mongo
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - default
      - trading_net

  avalon_mongo:
    image: mongo:6
    container_name: avalon_mongo
    command: mongod --port 27018
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - "27018:27018"
    volumes:
      - avalon_mongo_data:/data/db
    networks:
      - default
      - trading_net

  polarium_mongo:
    image: mongo:6
    container_name: polarium_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - "27017:27017"
    volumes:
      - polarium_mongo_data:/data/db
    networks:
      - default
      - trading_net

volumes:
  avalon_mongo_data:
  polarium_mongo_data:

networks:
  default:
    driver: bridge
  trading_net:
    external: true
    name: trading_docker_manipulator_botnet
